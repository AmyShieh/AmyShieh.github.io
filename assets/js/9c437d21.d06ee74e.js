"use strict";(self.webpackChunkmy_docusaurus_blog=self.webpackChunkmy_docusaurus_blog||[]).push([[5642],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),g=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=g(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=g(a),u=i,d=c["".concat(s,".").concat(u)]||c[u]||p[u]||l;return a?n.createElement(d,r(r({ref:t},m),{},{components:a})):n.createElement(d,r({ref:t},m))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,r[1]=o;for(var g=2;g<l;g++)r[g]=a[g];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},54909:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var n=a(87462),i=(a(67294),a(3905));const l={},r="git",o={unversionedId:"engineer/git",id:"engineer/git",title:"git",description:"basic",source:"@site/docs/engineer/git.md",sourceDirName:"engineer",slug:"/engineer/git",permalink:"/docs/engineer/git",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u51fd\u6570\u5f0f\u7f16\u7a0b",permalink:"/docs/engineer/functional-thinking"},next:{title:"linux command",permalink:"/docs/engineer/linux-command"}},s={},g=[{value:"basic",id:"basic",level:2},{value:"commit vs commit -a",id:"commit-vs-commit--a",level:3},{value:"command",id:"command",level:2},{value:"push",id:"push",level:3},{value:"merge",id:"merge",level:3},{value:"commit",id:"commit",level:3},{value:"remote version",id:"remote-version",level:3},{value:"branch delete",id:"branch-delete",level:3},{value:"SSH",id:"ssh",level:2},{value:"\u751f\u6210\u79d8\u94a5",id:"\u751f\u6210\u79d8\u94a5",level:3},{value:"shortcut",id:"shortcut",level:2},{value:"windows",id:"windows",level:3},{value:"mac",id:"mac",level:3},{value:"private key",id:"private-key",level:2}],m={toc:g},c="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"git"},"git"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"\ngit config user.name aliveAmy\ngit config user.email aliveAmy719@gmail.com\ngit remote add aliveAmy \ngp aliveAmy master \n")),(0,i.kt)("h2",{id:"basic"},"basic"),(0,i.kt)("h3",{id:"commit-vs-commit--a"},"commit vs commit -a"),(0,i.kt)("p",null,"-a:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"git add"),(0,i.kt)("li",{parentName:"ol"},"\u81ea\u52a8\u5220\u9664\u5728 index file \u4e2d\uff0c\u4f46\u662f\u4e0d\u5728\u5de5\u4f5c\u6811\u4e2d\u7684\u6587\u4ef6"),(0,i.kt)("li",{parentName:"ol"},"commit")),(0,i.kt)("p",null,"\u7ed3\u8bba\uff1a git commit -a === git add . && git commit"),(0,i.kt)("h2",{id:"command"},"command"),(0,i.kt)("h3",{id:"push"},"push"),(0,i.kt)("admonition",{title:"443 || 10054",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Failed to connect to github.com port 443: Timed out\n||\nOpenSSL SSL_read: Connection was reset, errno 10054")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git config --global http.proxy ""\n')),(0,i.kt)("p",null,"\u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u89e3\u51b3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git config --global http.sslverify false\n")),(0,i.kt)("h3",{id:"merge"},"merge"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"git merge"),"\u547d\u4ee4\u7684\u8bed\u6cd5\u662f\uff0c\u5c06\u6307\u5b9a\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u6240\u5728\u5206\u652f\u3002\n\u6240\u4ee5\u628a ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u5206\u652f\u7684\u5185\u5bb9\u5408\u5e76\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"\u5206\u652f\u65f6\uff0c\u9700\u8981\u5207\u5230",(0,i.kt)("inlineCode",{parentName:"p"},"b"),"\u5206\u652f\uff0c\u6267\u884c",(0,i.kt)("inlineCode",{parentName:"p"},"git merge a"),"\u3002"),(0,i.kt)("h3",{id:"commit"},"commit"),(0,i.kt)("admonition",{title:"LF & CRLF",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"fatal: LF would be replaced by CRLF in some file")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git config --global core.safecrlf false\n")),(0,i.kt)("br",null),(0,i.kt)("admonition",{title:"\u63d0\u4ea4\u90ae\u7bb1\u6821\u9a8c",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"\u9700\u8981\u4fee\u6539\u6700\u8fd1\u4e00\u6b21\u7684 commit author")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'git commit --amend --author="aliveAmy <aliveAmy719@gmail.com>"\n')),(0,i.kt)("h3",{id:"remote-version"},"remote version"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"check remote version")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git remote -v\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add remote version")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git remote add [origin or someveriosn name]\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"remove remote version")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git remote remove [origin or someversion name]\n")),(0,i.kt)("h3",{id:"branch-delete"},"branch delete"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"// delete locally\ngit branch -d localBranchName\n\n// delete remotely\ngit push origin --delete remoteBranch\n\n")),(0,i.kt)("h2",{id:"ssh"},"SSH"),(0,i.kt)("h3",{id:"\u751f\u6210\u79d8\u94a5"},"\u751f\u6210\u79d8\u94a5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"  ssh-keygen -t rsa -C aliveamy719@gmail.com\n")),(0,i.kt)("h2",{id:"shortcut"},"shortcut"),(0,i.kt)("h3",{id:"windows"},"windows"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title=".bashrc"',title:'".bashrc"'},"alias g='git'\nalias gst='git status'\nalias gd='git diff'\nalias gdc='git diff --cached'\nalias gl='git pull'\nalias gup='git pull --rebase'\nalias gp='git push'\nalias gd='git diff'\nalias gc='git commit -v'\nalias gc!='git commit -v --amend'\nalias gca='git commit -v -a'\nalias gca!='git commit -v -a --amend'\nalias gcmsg='git commit -m'\nalias gco='git checkout'\nalias gcm='git checkout master'\nalias gr='git remote'\nalias grv='git remote -v'\nalias grmv='git remote rename'\nalias grrm='git remote remove'\nalias grset='git remote set-url'\nalias grup='git remote update'\nalias grbi='git rebase -i'\nalias grbc='git rebase --continue'\nalias grba='git rebase --abort'\nalias gb='git branch'\nalias gba='git branch -a'\nalias gcount='git shortlog -sn'\nalias gcl='git clone'\nalias gcp='git cherry-pick'\nalias glg='git log --stat --max-count=10'\nalias glgg='git log --graph --max-count=10'\nalias glgga='git log --graph --decorate --all'\nalias glo='git log --oneline --decorate --color'\nalias glog='git log --oneline --decorate --color --graph'\nalias gss='git status -s'\nalias ga='git add'\nalias gm='git merge'\nalias grh='git reset HEAD'\nalias grhh='git reset HEAD --hard'\nalias gclean='git reset --hard && git clean -dfx'\nalias gwc='git whatchanged -p --abbrev-commit --pretty=medium'\n\n#remove the gf alias\n#alias gf='git ls-files | grep'\n\nalias gpoat='git push origin --all && git push origin --tags'\nalias gmt='git mergetool --no-prompt'\n\nalias gg='git gui citool'\nalias gga='git gui citool --amend'\nalias gk='gitk --all --branches'\n\nalias gsts='git stash show --text'\nalias gsta='git stash'\nalias gstp='git stash pop'\nalias gstd='git stash drop'\n\n# Will cd into the top of the current repository\n# or submodule.\nalias grt='cd $(git rev-parse --show-toplevel || echo \".\")'\n\n# Git and svn mix\nalias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'\n\nalias gsr='git svn rebase'\nalias gsd='git svn dcommit'\n")),(0,i.kt)("h3",{id:"mac"},"mac"),(0,i.kt)("p",null,"\u76f4\u63a5\u4e0a zsh~"),(0,i.kt)("h2",{id:"private-key"},"private key"))}p.isMDXComponent=!0}}]);